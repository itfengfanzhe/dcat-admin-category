<?php
namespace Dcat\Admin\Category\Models;

use Dcat\Admin\Admin;
use Dcat\Admin\Traits\ModelTree;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Cache;
use Spatie\EloquentSortable\Sortable;

class Category extends Model implements Sortable
{
    use ModelTree;
    protected $table = "itffz_category";

    protected $titleColumn = 'title';

    protected $orderColumn = 'sort';

    protected $parentColumn = 'pid';

    protected $casts = [
        'created_at' => 'datetime:Y-m-d H:i:s',
        'updated_at' => 'datetime:Y-m-d H:i:s',
    ];

    protected static function boot()
    {
        self::saving(function ($model) {
            if (empty($model->pid)) $model->pid = 0;
            Cache::forget('cate_map_all_'.$model->tabe_text);
        });
        parent::boot(); // TODO: Change the autogenerated stub
    }

    /**
     * 获取所有分类map
     * @param null $index
     * @param string $table
     * @return array|mixed|string
     * @author 张建伟 <itfengfanzhe@163.com>
     */
    public static function cateMap($index = null, $table = null)
    {
        if (!Admin::extension()->enabled('itfengfanzhe.dcat-admin-category')) {
            throw new \Exception('该扩展未启用');
        }
        if (!$map = Cache::get('cate_map_all_'.$table, [])) {
            if(empty($table)) {
                $map = Category::query()->whereNull('table_text')->pluck('title', 'id')->toArray();
            } else {
                $map = Category::query()->where('table_text', $table)->pluck('title', 'id')->toArray();
            }
            Cache::add('cate_map_all_'.$table, $map);
        }


        if ($index == null) return $map;

        return $map[$index] ?? '';
    }

    /**
     * 获取分类的子类数组
     * @param int $pid
     * @param $table
     * @return array
     * @author 张建伟 <itfengfanzhe@163.com>
     */
    public static function catePluck($pid = 0, $table): array
    {
        if (!Admin::extension()->enabled('itfengfanzhe.dcat-admin-category')) {
            throw new \Exception('该扩展未启用');
        }
        return Category::query()
            ->where('pid', $pid)
            ->where('table_text', $table)
            ->orderBy('sort', 'desc')
            ->pluck('title', 'id')
            ?->toArray() ?? [];
    }

    /**
     * 获取所有子类
     * @param int $id
     * @param null $table
     * @return array
     * @author 张建伟 <itfengfanzhe@163.com>
     */
    public static function getCateTree($id = 0, $table = null)
    {
        if (!Admin::extension()->enabled('itfengfanzhe.dcat-admin-category')) {
            throw new \Exception('该扩展未启用');
        }
        $tree = [];
        $all_tree = Category::query()->where('pid', $id)->where('table_text', $table)->orderBy('sort', 'desc')->get()?->toArray() ?? [];
        foreach ($all_tree as $val) {
            $val['son'] = self::getCateTree($val['id'], $val['table_text']);
            $tree[] = $val;
        }

        return $tree;
    }

    /**
     * 获取一个分类的详情
     * @param $id
     * @return \Illuminate\Database\Eloquent\Builder|\Illuminate\Database\Eloquent\Builder[]|\Illuminate\Database\Eloquent\Collection|Model|null
     * @author 张建伟 <itfengfanzhe@163.com>
     */
    public static function getCateDetail($id)
    {
        if (!Admin::extension()->enabled('itfengfanzhe.dcat-admin-category')) {
            throw new \Exception('该扩展未启用');
        }
        return Category::query()->find($id);
    }

    /**
     * 获取分类列表
     * @param $pid
     * @param null $table
     * @return array|float|int|mixed
     * @author 张建伟 <itfengfanzhe@163.com>
     */
    public static function getList($pid, $table = null)
    {
        if (!Admin::extension()->enabled('itfengfanzhe.dcat-admin-category')) {
            throw new \Exception('该扩展未启用');
        }
        return Category::query()
            ->where('pid', $pid)
            ->where('table_text', $table)
            ->orderBy('sort', 'desc')
            ->get()?->toArray() ?? [];
    }

}
